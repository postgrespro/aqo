-- Tests on cardinality estimation of FDW-queries:
-- simple ForeignScan.
-- JOIN push-down (check push of baserestrictinfo and joininfo)
-- Aggregate push-down
-- Push-down of groupings with HAVING clause.
CREATE EXTENSION aqo;
CREATE EXTENSION postgres_fdw;
SET aqo.mode = 'learn';
SET aqo.show_details = 'true'; -- show AQO info for each node and entire query.
SET aqo.show_hash = 'false'; -- a hash value is system-depended. Ignore it.
SET aqo.join_threshold = 0;
DO $d$
    BEGIN
        EXECUTE $$CREATE SERVER loopback FOREIGN DATA WRAPPER postgres_fdw
            OPTIONS (dbname '$$||current_database()||$$',
                     port '$$||current_setting('port')||$$'
            )$$;
    END;
$d$;
CREATE USER MAPPING FOR PUBLIC SERVER loopback;
CREATE TABLE local (x int);
CREATE FOREIGN TABLE frgn(x int) SERVER loopback OPTIONS (table_name 'local');
INSERT INTO frgn (x) VALUES (1);
ANALYZE local;
-- Utility tool. Allow to filter system-dependent strings from explain output.
CREATE FUNCTION expln(query_string text) RETURNS SETOF text AS $$
BEGIN
    RETURN QUERY
        EXECUTE format('%s', query_string);
    RETURN;
END;
$$ LANGUAGE PLPGSQL;
-- Trivial foreign scan.
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
SELECT x FROM frgn;
                  QUERY PLAN                  
----------------------------------------------
 Foreign Scan on frgn (actual rows=1 loops=1)
   AQO not used
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(5 rows)

EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
SELECT x FROM frgn;
                  QUERY PLAN                  
----------------------------------------------
 Foreign Scan on frgn (actual rows=1 loops=1)
   AQO: rows=1, error=0%
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(5 rows)

-- Push down base filters. Use verbose mode to see filters.
SELECT str FROM expln('
  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF, VERBOSE)
    SELECT x FROM frgn WHERE x < 10;
') AS str WHERE str NOT LIKE '%Query Identifier%';
                            str                            
-----------------------------------------------------------
 Foreign Scan on public.frgn (actual rows=1 loops=1)
   AQO not used
   Output: x
   Remote SQL: SELECT x FROM public.local WHERE ((x < 10))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

SELECT str FROM expln('
  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF, VERBOSE)
    SELECT x FROM frgn WHERE x < 10;
') AS str WHERE str NOT LIKE '%Query Identifier%';
                            str                            
-----------------------------------------------------------
 Foreign Scan on public.frgn (actual rows=1 loops=1)
   AQO: rows=1, error=0%
   Output: x
   Remote SQL: SELECT x FROM public.local WHERE ((x < 10))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
SELECT x FROM frgn WHERE x < -10; -- AQO ignores constants
                  QUERY PLAN                  
----------------------------------------------
 Foreign Scan on frgn (actual rows=0 loops=1)
   AQO: rows=1, error=100%
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(5 rows)

-- Trivial JOIN push-down.
SELECT str FROM expln('
  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
  SELECT * FROM frgn AS a, frgn AS b WHERE a.x=b.x;
') AS str WHERE str NOT LIKE '%Sort Method%';
                    str                    
-------------------------------------------
 Foreign Scan (actual rows=1 loops=1)
   AQO not used
   Relations: (frgn a) INNER JOIN (frgn b)
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(6 rows)

-- Should learn on postgres_fdw nodes
SELECT str FROM expln('
  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF, VERBOSE)
    SELECT * FROM frgn AS a, frgn AS b WHERE a.x=b.x;
') AS str WHERE str NOT LIKE '%Query Identifier%';
                                                  str                                                   
--------------------------------------------------------------------------------------------------------
 Foreign Scan (actual rows=1 loops=1)
   AQO: rows=1, error=0%
   Output: a.x, b.x
   Relations: (public.frgn a) INNER JOIN (public.frgn b)
   Remote SQL: SELECT r1.x, r2.x FROM (public.local r1 INNER JOIN public.local r2 ON (((r1.x = r2.x))))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(8 rows)

CREATE TABLE local_a(aid int primary key, aval text);
CREATE TABLE local_b(bid int primary key, aid int references local_a(aid), bval text);
INSERT INTO local_a SELECT i, 'val_' || i FROM generate_series(1,100) i;
INSERT INTO local_b SELECT i, mod((i+random()*10)::numeric, 10) + 1, 'val_' || i FROM generate_series(1,1000) i;
ANALYZE local_a, local_b;
CREATE FOREIGN TABLE frgn_a(aid int, aval text) SERVER loopback OPTIONS (table_name 'local_a');
CREATE FOREIGN TABLE frgn_b(bid int, aid int, bval text) SERVER loopback OPTIONS (table_name 'local_b');
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
SELECT * from frgn_a AS a, frgn_b AS b
WHERE a.aid = b.aid AND b.bval like 'val%';
                  QUERY PLAN                   
-----------------------------------------------
 Foreign Scan (actual rows=1000 loops=1)
   AQO not used
   Relations: (frgn_a a) INNER JOIN (frgn_b b)
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(6 rows)

EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
SELECT * from frgn_a AS a, frgn_b AS b
WHERE a.aid = b.aid AND b.bval like 'val%';
                  QUERY PLAN                   
-----------------------------------------------
 Foreign Scan (actual rows=1000 loops=1)
   AQO: rows=1000, error=0%
   Relations: (frgn_a a) INNER JOIN (frgn_b b)
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(6 rows)

-- TODO: Non-mergejoinable join condition.
EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF)
SELECT * FROM frgn AS a, frgn AS b WHERE a.x<b.x;
                QUERY PLAN                 
-------------------------------------------
 Foreign Scan (actual rows=0 loops=1)
   AQO not used
   Relations: (frgn a) INNER JOIN (frgn b)
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(6 rows)

SELECT str FROM expln('
  EXPLAIN (ANALYZE, COSTS OFF, SUMMARY OFF, TIMING OFF, VERBOSE)
    SELECT * FROM frgn AS a, frgn AS b WHERE a.x<b.x;
') AS str WHERE str NOT LIKE '%Query Identifier%';
                                                  str                                                   
--------------------------------------------------------------------------------------------------------
 Foreign Scan (actual rows=0 loops=1)
   AQO: rows=1, error=100%
   Output: a.x, b.x
   Relations: (public.frgn a) INNER JOIN (public.frgn b)
   Remote SQL: SELECT r1.x, r2.x FROM (public.local r1 INNER JOIN public.local r2 ON (((r1.x < r2.x))))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(8 rows)

DROP EXTENSION aqo CASCADE;
DROP EXTENSION postgres_fdw CASCADE;
NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to server loopback
drop cascades to user mapping for public on server loopback
drop cascades to foreign table frgn
drop cascades to foreign table frgn_a
drop cascades to foreign table frgn_b
DROP TABLE local;
DROP TABLE local_b;
DROP TABLE local_a;
