-- Tests on cardinality estimation of FDW-queries:
-- simple ForeignScan.
-- JOIN push-down (check push of baserestrictinfo and joininfo)
-- Aggregate push-down
-- Push-down of groupings with HAVING clause.
CREATE EXTENSION aqo;
CREATE EXTENSION postgres_fdw;
SET aqo.mode = 'learn';
SET aqo.show_details = 'true'; -- show AQO info for each node and entire query.
SET aqo.show_hash = 'false'; -- a hash value is system-depended. Ignore it.
DO $d$
    BEGIN
        EXECUTE $$CREATE SERVER loopback FOREIGN DATA WRAPPER postgres_fdw
            OPTIONS (dbname '$$||current_database()||$$',
                     port '$$||current_setting('port')||$$'
            )$$;
    END;
$d$;
--
-- Returns string-by-string explain of a query. Made for removing some strings
-- from the explain output.
--
CREATE OR REPLACE FUNCTION expln(query_string text default 'select * from table', verbose_p boolean default TRUE) RETURNS SETOF text AS $$
BEGIN
    IF verbose_p=TRUE THEN
        RETURN QUERY EXECUTE format('EXPLAIN (ANALYZE, VERBOSE, COSTS OFF, TIMING OFF, SUMMARY OFF) %s', query_string);
    else
        RETURN QUERY EXECUTE format('EXPLAIN (ANALYZE, COSTS OFF, TIMING OFF, SUMMARY OFF) %s', query_string);
    END IF;
    Return;
END;
$$ LANGUAGE PLPGSQL;
CREATE USER MAPPING FOR PUBLIC SERVER loopback;
CREATE TABLE local (x int);
CREATE FOREIGN TABLE frgn(x int) SERVER loopback OPTIONS (table_name 'local');
INSERT INTO frgn (x) VALUES (1);
ANALYZE local;
-- Trivial foreign scan.s
SELECT str AS result
FROM expln('SELECT x FROM frgn;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                       result                        
-----------------------------------------------------
 Foreign Scan on public.frgn (actual rows=1 loops=1)
   AQO not used
   Output: x
   Remote SQL: SELECT x FROM public.local
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

SELECT str AS result
FROM expln('SELECT x FROM frgn;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                       result                        
-----------------------------------------------------
 Foreign Scan on public.frgn (actual rows=1 loops=1)
   AQO: rows=1, error=0%
   Output: x
   Remote SQL: SELECT x FROM public.local
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

-- Push down base filters. Use verbose mode to see filters.
SELECT str AS result
FROM expln('SELECT x FROM frgn WHERE x < 10;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                          result                           
-----------------------------------------------------------
 Foreign Scan on public.frgn (actual rows=1 loops=1)
   AQO not used
   Output: x
   Remote SQL: SELECT x FROM public.local WHERE ((x < 10))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

SELECT str AS result
FROM expln('SELECT x FROM frgn WHERE x < 10;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                          result                           
-----------------------------------------------------------
 Foreign Scan on public.frgn (actual rows=1 loops=1)
   AQO: rows=1, error=0%
   Output: x
   Remote SQL: SELECT x FROM public.local WHERE ((x < 10))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

SELECT str AS result
FROM expln('SELECT x FROM frgn WHERE x < -10;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%'; -- AQO ignores constants
                            result                            
--------------------------------------------------------------
 Foreign Scan on public.frgn (actual rows=0 loops=1)
   AQO: rows=1, error=100%
   Output: x
   Remote SQL: SELECT x FROM public.local WHERE ((x < (-10)))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(7 rows)

-- Trivial JOIN push-down.
SELECT str AS result
FROM expln('SELECT * FROM frgn AS a, frgn AS b WHERE a.x=b.x;', FALSE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                           result                           
------------------------------------------------------------
 Merge Join (actual rows=1 loops=1)
   AQO not used
   Merge Cond: (a.x = b.x)
   ->  Sort (actual rows=1 loops=1)
         AQO not used
         Sort Key: a.x
         Sort Method: quicksort  Memory: 25kB
         ->  Foreign Scan on frgn a (actual rows=1 loops=1)
               AQO not used
   ->  Sort (actual rows=1 loops=1)
         AQO not used
         Sort Key: b.x
         Sort Method: quicksort  Memory: 25kB
         ->  Foreign Scan on frgn b (actual rows=1 loops=1)
               AQO not used
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(18 rows)

SELECT str AS result
FROM expln('SELECT * FROM frgn AS a, frgn AS b WHERE a.x=b.x;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                                                 result                                                 
--------------------------------------------------------------------------------------------------------
 Foreign Scan (actual rows=1 loops=1)
   AQO: rows=1, error=0%
   Output: a.x, b.x
   Relations: (public.frgn a) INNER JOIN (public.frgn b)
   Remote SQL: SELECT r1.x, r2.x FROM (public.local r1 INNER JOIN public.local r2 ON (((r1.x = r2.x))))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(8 rows)

-- TODO: Non-mergejoinable join condition.
SELECT str AS result
FROM expln('SELECT * FROM frgn AS a, frgn AS b WHERE a.x<b.x;', FALSE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                  result                   
-------------------------------------------
 Foreign Scan (actual rows=0 loops=1)
   AQO not used
   Relations: (frgn a) INNER JOIN (frgn b)
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(6 rows)

SELECT str AS result
FROM expln('SELECT * FROM frgn AS a, frgn AS b WHERE a.x<b.x;', TRUE) AS str
WHERE str NOT LIKE 'Query Identifier%';
                                                 result                                                 
--------------------------------------------------------------------------------------------------------
 Foreign Scan (actual rows=0 loops=1)
   AQO not used
   Output: a.x, b.x
   Relations: (public.frgn a) INNER JOIN (public.frgn b)
   Remote SQL: SELECT r1.x, r2.x FROM (public.local r1 INNER JOIN public.local r2 ON (((r1.x < r2.x))))
 Using aqo: true
 AQO mode: LEARN
 JOINS: 0
(8 rows)

DROP EXTENSION aqo CASCADE;
DROP EXTENSION postgres_fdw CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to server loopback
drop cascades to user mapping for public on server loopback
drop cascades to foreign table frgn
DROP TABLE local;
