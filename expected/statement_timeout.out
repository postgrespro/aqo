-- Check the learning-on-timeout feature
-- For stabilized reproduction autovacuum must be disabled.
CREATE FUNCTION check_estimated_rows(text) RETURNS TABLE (estimated int)
LANGUAGE plpgsql AS $$
DECLARE
    ln text;
    tmp text[];
    first_row bool := true;
BEGIN
    FOR ln IN
        execute format('explain %s', $1)
    LOOP
        IF first_row THEN
            first_row := false;
            tmp := regexp_match(ln, 'rows=(\d*)');
            RETURN QUERY SELECT tmp[1]::int;
        END IF;
    END LOOP;
END; $$;
CREATE TABLE t AS SELECT * FROM generate_series(1,100) AS x;
ANALYZE t;
DELETE FROM t WHERE x > 5; -- Force optimizer to make overestimated prediction.
CREATE EXTENSION IF NOT EXISTS aqo;
SET aqo.join_threshold = 0;
SET aqo.mode = 'learn';
SET aqo.show_details = 'off';
SET aqo.learn_statement_timeout = 'on';
SET statement_timeout = 800; -- [0.8s]
SELECT *, pg_sleep(1) FROM t;
NOTICE:  [AQO] Time limit for execution of the statement was expired. AQO tried to learn on partial data.
ERROR:  canceling statement due to statement timeout
SELECT check_estimated_rows('SELECT *, pg_sleep(1) FROM t;'); -- haven't any partial data
 check_estimated_rows 
----------------------
                  100
(1 row)

-- Don't learn because running node has smaller cardinality than an optimizer prediction
SET statement_timeout = 3500;
SELECT *, pg_sleep(1) FROM t;
NOTICE:  [AQO] Time limit for execution of the statement was expired. AQO tried to learn on partial data.
ERROR:  canceling statement due to statement timeout
SELECT check_estimated_rows('SELECT *, pg_sleep(1) FROM t;');
 check_estimated_rows 
----------------------
                  100
(1 row)

-- We have a real learning data.
SET statement_timeout = 10000;
SELECT *, pg_sleep(1) FROM t;
 x | pg_sleep 
---+----------
 1 | 
 2 | 
 3 | 
 4 | 
 5 | 
(5 rows)

SELECT check_estimated_rows('SELECT *, pg_sleep(1) FROM t;');
 check_estimated_rows 
----------------------
                    5
(1 row)

-- Force to make an underestimated prediction
DELETE FROM t WHERE x > 2;
ANALYZE t;
INSERT INTO t (x) (SELECT * FROM generate_series(3,5) AS x);
SELECT 1 FROM aqo_reset();
 ?column? 
----------
        1
(1 row)

SET statement_timeout = 800;
SELECT *, pg_sleep(1) FROM t; -- Not learned
NOTICE:  [AQO] Time limit for execution of the statement was expired. AQO tried to learn on partial data.
ERROR:  canceling statement due to statement timeout
SELECT check_estimated_rows('SELECT *, pg_sleep(1) FROM t;');
 check_estimated_rows 
----------------------
                    2
(1 row)

SET statement_timeout = 3500;
SELECT *, pg_sleep(1) FROM t; -- Learn!
NOTICE:  [AQO] Time limit for execution of the statement was expired. AQO tried to learn on partial data.
ERROR:  canceling statement due to statement timeout
SELECT check_estimated_rows('SELECT *, pg_sleep(1) FROM t;');
 check_estimated_rows 
----------------------
                    3
(1 row)

SET statement_timeout = 5500;
SELECT *, pg_sleep(1) FROM t; -- Get reliable data
 x | pg_sleep 
---+----------
 1 | 
 2 | 
 3 | 
 4 | 
 5 | 
(5 rows)

SELECT check_estimated_rows('SELECT *, pg_sleep(1) FROM t;');
 check_estimated_rows 
----------------------
                    5
(1 row)

SELECT 1 FROM aqo_reset();
 ?column? 
----------
        1
(1 row)

DROP TABLE t;
DROP EXTENSION aqo;
DROP FUNCTION check_estimated_rows;
